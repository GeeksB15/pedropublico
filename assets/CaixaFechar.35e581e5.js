import{_ as k,r as E,o as g,d as V,w as p,f as n,L as P,E as N,h as $,G as z,Q as _,M as T,i as y,k as v,H as U,B as o,t as l,j as F,m as B,n as b,F as D,s as w,e as q,C as M}from"./index.c8ffb049.js";const Q={computed:{recebimentos(){return $utils.arredondar((this.campos.fechamento||0)-(this.campos.abertura||0)+(this.campos.despesas||0)-(this.campos.suprimentos||0)+(this.campos.sangrias||0))}},data(){return{visivel:!1,idDocumentoCaixa:"",campos:{sangrias:0,despesas:0,suprimentos:0,sangriaFinal:0,fundoCaixa:0,abertura:0,fechamento:0,dataHoraAbertura:"",nomeUsuarioAbertura:"",caixaDescricao:"",caixaEmpresaNome:"",observacao:""},sangrias:[],despesas:[],suprimentos:[],condicaoPagamento:[]}},emits:["fechado","update:modelValue"],methods:{calculaSangriaFinal(){let t=$utils.arredondar(this.campos.fechamento-this.campos.fundoCaixa);t<0&&(this.$q.notify({message:"Sangria final n\xE3o pode ser maior do que o recebimento",type:"warning"}),this.campos.fundoCaixa=0,t=$utils.arredondar(this.campos.fechamento)),this.campos.sangriaFinal=t},async atualizar(){const t=$utils.logarIni("AtualizarCaixa");await $tryLoading(async()=>{var d,m,s,h,C,x,u;const a=await $db.contatoCpf.leCache($db.usuario.logado.numeroDocumentoNacional);$utils.verificarErro(!(a!=null&&a.id),"Usu\xE1rio n\xE3o cadastrado nos contatos da empresa."),$utils.verificarErro(!this.idDocumentoCaixa,"Selecione um caixa aberto");const e=await $db.hibrido.le({table:"documento",id:this.idDocumentoCaixa});e.tipo==="Caixa"&&["Aberto","Reaberto"].includes(e.status)&&(this.documentoCaixa=e),$utils.verificarErro(!((d=this.documentoCaixa)!=null&&d.id),"Selecione um caixa aberto");const r=await $db.caixa.leCompleto(this.idDocumentoCaixa);console.log("Atualizar",$utils.clonarV2(r)),this.campos.sangrias=0,this.campos.despesas=0,this.campos.suprimentos=0,this.campos.sangriaFinal=0,this.campos.fundoCaixa=0,this.campos.abertura=0,this.campos.fechamento=0,this.campos.dataHoraAbertura="",this.campos.nomeUsuarioAbertura="",this.campos.caixaDescricao="",this.campos.caixaEmpresaNome="",this.campos.observacao="";for(const f of r.faturas)$utils.verificarErro(!f.dataHoraFinalizado,"Existem faturas abertas com condi\xE7\xE3o de pagamento lan\xE7ada. N\xE3o \xE9 poss\xEDvel finalizar o caixa sem finalizar ou excluir essas faturas!");this.caixa=r.caixa,this.empresa=r.empresa,this.sangrias=r.sangrias.filter(({documentoTipo:f})=>f==="Sangria"),this.campos.sangrias=$utils.arredondar($utils.somar(this.sangrias,"valorCredito")),this.despesas=r.despesas;let i=0;for(const f of this.despesas)i+=f.valorTotal,f.contato=await $db.contato.le({id:f.idContato}),f.financeiroPlanoConta=await $db.financeiroPlanoConta.le({id:f.idFinanceiroPlanoConta});this.campos.despesas=r.totalDespesas,this.suprimentos=r.suprimentos,this.campos.suprimentos=$utils.arredondar(this.suprimentos.reduce((f,S)=>(f+=S.valorDebito,f),0)),this.condicaoPagamento=r.condicaoPagamento,(m=r.condicaoPagamentoDinheiro)!=null&&m.length||console.error("Caixa sem configura\xE7\xE3o completa de plano de contas para dinheiro"),((h=(s=r.condicaoPagamentoDinheiro)==null?void 0:s[0])==null?void 0:h.descricao)!=="Dinheiro"&&console.error("Caixa sem configura\xE7\xE3o correta de forma de pagamente em dinheiro. Nome da forma de pagamento:",(x=(C=r.condicaoPagamentoDinheiro)==null?void 0:C[0])==null?void 0:x.descricao),this.campos.abertura=this.documentoCaixa.valorAbertura,this.campos.dataHoraAbertura=this.documentoCaixa.dataHoraEmissao,this.campos.observacao=this.documentoCaixa.observacao;let c;this.documentoCaixa.idContato&&(c=await $erp().contato.get(this.documentoCaixa.idContato)),this.campos.nomeUsuarioAbertura=(u=c==null?void 0:c.nome)!=null?u:"",this.campos.caixaDescricao=this.caixa.descricao,this.campos.caixaEmpresaNome=this.empresa.nome,this.calculaSangriaFinal(),this.visivel=!0,this.$emit("update:modelValue",!0)}),$utils.logarFim(t,1)},async fecharCaixaGerarCaixaAlterado({caixa:t,documentoCaixa:a,agora:e}){const r=$utils.clonar(a);return r.status="Aguardando Confer\xEAncia",r.dataHoraFinalizado=e,r.observacao=this.campos.observacao,r.valorAbertura=this.campos.abertura,$utils.verificarErro(new Date(r.dataHoraFinalizado)<new Date(r.dataHoraEmissao),`
          A abertura do caixa foi registrada em ${this.$filters.dataHora(r.dataHoraEmissao)},
          sua data agora \xE9 ${this.$filters.dataHora(r.dataHoraFinalizado)},
          como ela \xE9 menor que a abertura, n\xE3o podemos continuar, confira a data e hora do seu dispositivo.
        `),$utils.verificarErro(!t.id,"Caixa n\xE3o existe"),{documentoCaixaAlterado:r}},async fecharCaixaGerarSangriaFinal({caixaCompleto:t,agora:a,documentoCaixa:e,documentosStatus:r,contaOrigem:i,contaDestino:c}){const d=t.sangriaFinal.find(u=>u.idFinanceiroPlanoConta===i.id),m=t.sangriaFinal.find(u=>u.idFinanceiroPlanoConta===c.id);if(!d&&!m&&$utils.arredondar(this.campos.sangriaFinal)<=0)return;const s=r.filter(u=>u.operacao==="Fechamento Caixa"&&u.statusFinalizado==="Aguardando Confer\xEAncia"&&u.statusOriginal==="Aberto"),h=s.length?s[0].dataHoraEmissao:a,C=$db.usuario.logado.id;let x=(d==null?void 0:d.idFinanceiroMovimentacaoN)||(m==null?void 0:m.idFinanceiroMovimentacaoN);if(x||(x=$utils.uuid(),await $db.hibrido.grava("financeiroMovimentacaoN",{atual:{id:x}})),d)await $db.hibrido.grava("financeiroMovimentacao",{atual:{...d,valorCredito:this.campos.sangriaFinal},original:d});else{const u={id:$utils.uuid(),idFinanceiroMovimentacaoN:x,idEmpresa:e.idEmpresa,idContato:C,idFinanceiroPlanoConta:i.id,dataEmissao:a,dataCompetencia:h,dataVencimento:h,dataMovimento:h,valorDebito:0,valorCredito:this.campos.sangriaFinal,descricao:`Sangria final de ${$db.usuario.logado.nome} no Caixa #${e.id}`,observacao:"Transfer\xEAncia entre contas",documentoTipo:"Sangria Final",documentoId:e.id,idDocumentoCaixa:e.id};await $db.hibrido.grava("financeiroMovimentacao",{atual:u})}if(m)await $db.hibrido.grava("financeiroMovimentacao",{atual:{...m,valorDebito:this.campos.sangriaFinal},original:m});else{const u={id:$utils.uuid(),idFinanceiroMovimentacaoN:x,idEmpresa:e.idEmpresa,idContato:C,idFinanceiroPlanoConta:c.id,dataEmissao:a,dataCompetencia:h,dataVencimento:h,dataMovimento:h,valorDebito:this.campos.sangriaFinal,valorCredito:0,descricao:`Sangria final de ${$db.usuario.logado.nome} no Caixa #${e.id}`,observacao:"Transfer\xEAncia entre contas",documentoTipo:"Sangria Final",documentoId:e.id,idDocumentoCaixa:e.id};await $db.hibrido.grava("financeiroMovimentacao",{atual:u})}t.sangriaFinal=await $db.caixa.leSangriaFinal(this.idDocumentoCaixa)},async fecharCaixaGerarStatus({agora:t,caixaCompleto:a}){const{documentoCaixa:e,documentosStatus:r}=a;let i=r,c="";return i.length&&(i=$lodash.orderBy(i,"dataHoraEmissao","desc"),c=i[0].statusFinalizado),{documentoStatusCaixa:{id:$utils.uuid(),idDocumento:e.id,operacao:"Fechamento Caixa",statusOriginal:c,statusFinalizado:"Aguardando Confer\xEAncia",dataHoraEmissao:t,cpfUsuario:$db.usuario.logado.numeroDocumentoNacional,idDocumentoCaixa:e.id}}},async fecharCaixa(){const t=$utils.logarIni("CaixaFechar");await $tryLoading(async()=>{$utils.verificarErro(this.campos.sangriaFinal<0,"Sangria final n\xE3o pode ser negativa.");const a=$utils.dataAtual(),e=await $db.caixa.leCompleto(this.idDocumentoCaixa);console.log("Fechando",$utils.clonarV2(e));const{caixa:r,documentoCaixa:i,documentosStatus:c,contaOrigem:d,contaDestino:m}=e,{documentoCaixaAlterado:s}=await this.fecharCaixaGerarCaixaAlterado({caixa:r,documentoCaixa:i,agora:a});e.documentoCaixa=s,await this.fecharCaixaGerarSangriaFinal({caixaCompleto:e,agora:a,documentoCaixa:i,documentosStatus:c,contaOrigem:d,contaDestino:m});const{documentoStatusCaixa:h}=await this.fecharCaixaGerarStatus({agora:a,caixaCompleto:e});e.documentoStatusCaixa=h,e.campos=this.campos,e.valoresDigitados=this.condicaoPagamento.map(({id:x,tipo:u,descricao:f,valor:S,totalSistema:A,idFormaPagamento:H})=>({id:x,tipo:u,descricao:f,valor:S,totalSistema:A,idFormaPagamento:H})),e.totalValoresDigitados=$utils.somar(e.valoresDigitados,"valor"),console.log("Fechado",$utils.clonarV2(e));const C={id:$utils.uuid(),idDocumentoCaixa:s.id,idDocumentoStatus:h.id,tabela:"caixaCompleto",json:JSON.stringify(e),dataHoraEmissao:a};await $db.hibrido.grava("caixaConsolidacao2",{atual:C}),await $db.hibrido.grava("documento",{atual:s,original:i}),await $db.hibrido.grava("documentoStatus",{atual:h}),this.visivel=!1,this.$emit("update:modelValue",!1),this.$emit("fechado"),this.$imprimir("fechamento-de-caixa",i.id),$q.notifyPositive("Caixa fechado com sucesso")},{mensagem:"Fechando caixa...",erro:"Ocorreu um erro ao fechar caixa"}),$utils.logarFim(t,1)},async mostrar(t){this.idDocumentoCaixa=t==null?void 0:t.idDocumentoCaixa,await this.atualizar()}}},G={class:"layout-padding q-pa-none q-pb-md"},O={class:"u-container q-pt-md"},I={class:"col-12"},L={class:"bg-white round-borders q-px-md q-pb-md"},R={class:"q-px-sm text-tertiary"},j={class:"q-px-sm text-tertiary hideonmobile"},J={class:"q-px-sm text-tertiary hideonmobile"},K={class:"col-6 text-tertiary hideondesktop"},W={class:"col-6 text-tertiary hideondesktop"},X={class:"col-12"},Y={class:"col-12 col-md-6"},Z={class:"bg-white fit round-borders q-px-md q-pb-md"},aa={class:"col-12 items-center q-col-gutter-sm text-body2 row"},oa={class:"col-7"},ia={class:"col-7 text-right"},sa={class:"col-7 text-right"},ta={key:0,class:"col-12"},ea={class:"Tabela q-ma-sm q-pa-md full-width"},ra={class:"col-7 text-right"},na={key:1,class:"col-12"},la={class:"Tabela q-ma-sm q-pa-md full-width"},da={class:"col-7 text-right"},ca={key:2,class:"col-12"},ma={class:"Tabela q-ma-sm q-pa-md full-width"},ua={class:"col-7"},pa={class:"col-7"},ha={class:"col-7 text-right"},fa={class:"col-12 col-md-6"},ga={class:"bg-white fit round-borders q-px-md q-pb-md"},ba={class:"q-mt-sm"},va={class:"col-7"},xa={class:"col-5"},Ca={key:1,class:"text-right",style:{"padding-top":"6px","padding-right":"8px"}};function Fa(t,a,e,r,i,c){const d=E("campo"),m=E("row");return g(),V(M,{id:"caixaFechar",modelValue:i.visivel,"onUpdate:modelValue":a[4]||(a[4]=s=>i.visivel=s),maximized:""},{default:p(()=>[n(P,{container:"",class:"bg-light"},{default:p(()=>[n(N,null,{default:p(()=>[n($,null,{default:p(()=>[z(n(_,{dense:"",flat:"",icon:"arrow_back",round:"",clikable:""},null,512),[[T]]),n(y,null,{default:p(()=>a[5]||(a[5]=[v("Fechar caixa")])),_:1}),n(_,{color:"white",class:"text-primary",label:"Concluir",onClick:c.fecharCaixa,unelevated:""},null,8,["onClick"])]),_:1})]),_:1}),n(U,null,{default:p(()=>[o("div",G,[o("div",O,[n(m,{class:"q-col-gutter-md"},{default:p(()=>[o("div",I,[o("div",L,[n($,{class:"q-px-none"},{default:p(()=>[n(y,{class:"text-tertiary"},{default:p(()=>[v(l(i.campos.caixaDescricao),1)]),_:1}),o("div",R,[o("div",null,[a[6]||(a[6]=o("small",null,"Abertura",-1)),a[7]||(a[7]=o("br",null,null,-1)),n(F,{name:"calendar_today",class:"q-mr-sm"}),v(" "+l(t.$filters.dataHora(i.campos.dataHoraAbertura)),1)])]),o("div",j,[o("div",null,[a[8]||(a[8]=o("small",null,"Usu\xE1rio",-1)),a[9]||(a[9]=o("br",null,null,-1)),n(F,{name:"person",class:"q-mr-sm"}),v(" "+l(i.campos.nomeUsuarioAbertura),1)])]),o("div",J,[a[10]||(a[10]=o("small",null,"Empresa",-1)),a[11]||(a[11]=o("br",null,null,-1)),n(F,{name:"business"}),v(" "+l(i.campos.caixaEmpresaNome),1)])]),_:1}),n(m,{class:"items-center q-col-gutter-x-md"},{default:p(()=>[o("div",K,[o("p",null,[a[12]||(a[12]=o("small",null,"Usu\xE1rio",-1)),a[13]||(a[13]=o("br",null,null,-1)),n(F,{name:"person"}),v(" "+l(i.campos.nomeUsuarioAbertura),1)])]),o("div",W,[o("p",null,[a[14]||(a[14]=o("small",null,"Empresa",-1)),a[15]||(a[15]=o("br",null,null,-1)),n(F,{name:"business"}),v(" "+l(i.campos.caixaEmpresaNome),1)])]),o("div",X,[n(d,{modelValue:i.campos.observacao,"onUpdate:modelValue":a[0]||(a[0]=s=>i.campos.observacao=s),rotulo:"Observa\xE7\xE3o",rows:"2",tipo:"textoArea"},null,8,["modelValue"])])]),_:1})])]),o("div",Y,[o("div",Z,[o("form",null,[n($,{class:"q-px-none"},{default:p(()=>[n(F,{name:"mdi-cash-multiple",size:"24px",class:"text-tertiary"}),n(y,{class:"text-tertiary"},{default:p(()=>a[16]||(a[16]=[v("Dinheiro")])),_:1})]),_:1}),n(m,{class:"q-col-gutter-md"},{default:p(()=>[o("div",aa,[a[18]||(a[18]=o("div",{class:"col-5"},"Abertura",-1)),o("div",oa,[n(d,{modelValue:i.campos.abertura,"onUpdate:modelValue":a[1]||(a[1]=s=>i.campos.abertura=s),class:"bg-grey-2",tipo:"decimal",decimals:"2"},null,8,["modelValue"])]),a[19]||(a[19]=o("div",{class:"col-5"},"Recebimentos em dinheiro",-1)),o("div",ia,[v(l(t.$filters.numero(c.recebimentos,2))+" ",1),n(B,null,{default:p(()=>a[17]||(a[17]=[v("Fechamento - Abertura + Despesas - Suprimentos + Sangrias = "),o("strong",null,"Recebimentos em dinheiro",-1)])),_:1})]),a[20]||(a[20]=o("div",{class:"col-5"},"Sangrias",-1)),o("div",sa,l(t.$filters.numero(i.campos.sangrias,2)),1),i.campos.sangrias>0?(g(),b("div",ta,[o("table",ea,[o("tbody",null,[(g(!0),b(D,null,w(i.sangrias,s=>(g(),b("tr",{key:s.id},[o("td",null,l(t.$filters.data(s.dataEmissao)),1),o("td",null,l(s.observacao),1),o("td",null,l(t.$filters.numero(s.valorCredito,2)),1)]))),128))])])])):q("",!0),a[21]||(a[21]=o("div",{class:"col-5"},"Suprimentos",-1)),o("div",ra,l(t.$filters.numero(i.campos.suprimentos,2)),1),i.campos.suprimentos>0?(g(),b("div",na,[o("table",la,[o("tbody",null,[(g(!0),b(D,null,w(i.suprimentos,s=>(g(),b("tr",{key:s.id},[o("td",null,l(t.$filters.data(s.dataEmissao)),1),o("td",null,l(s.observacao),1),o("td",null,l(t.$filters.numero(s.valorDebito,2)),1)]))),128))])])])):q("",!0),a[22]||(a[22]=o("div",{class:"col-5"},"Despesas",-1)),o("div",da,l(t.$filters.numero(i.campos.despesas,2)),1),i.campos.despesas>0?(g(),b("div",ca,[o("table",ma,[o("tbody",null,[(g(!0),b(D,null,w(i.despesas,s=>(g(),b("tr",{key:s.id},[o("td",null,l(t.$filters.data(s.dataEmissao)),1),o("td",null,l(s.nomeContato),1),o("td",null,l(s.descricaoPlanoConta),1),o("td",null,l(t.$filters.numero(s.valorTotal,2)),1)]))),128))])])])):q("",!0),a[23]||(a[23]=o("div",{class:"col-5"},"Fechamento",-1)),o("div",ua,[n(d,{modelValue:i.campos.fechamento,"onUpdate:modelValue":a[2]||(a[2]=s=>i.campos.fechamento=s),class:"bg-grey-2",tipo:"decimal",decimals:"2",onBlur:c.calculaSangriaFinal},null,8,["modelValue","onBlur"])]),a[24]||(a[24]=o("div",{class:"col-5"},"Abertura dia seguinte",-1)),o("div",pa,[n(d,{modelValue:i.campos.fundoCaixa,"onUpdate:modelValue":a[3]||(a[3]=s=>i.campos.fundoCaixa=s),class:"bg-grey-2",tipo:"decimal",decimals:"2",onBlur:c.calculaSangriaFinal},null,8,["modelValue","onBlur"])]),a[25]||(a[25]=o("div",{class:"col-5"},"Sangria Final",-1)),o("div",ha,l(t.$filters.numero(i.campos.sangriaFinal,2)),1)])]),_:1})])])]),o("div",fa,[o("div",ga,[o("form",null,[n($,{class:"q-px-none"},{default:p(()=>[n(F,{name:"mdi-credit-card-multiple",size:"24px",class:"text-tertiary"}),n(y,{class:"text-tertiary"},{default:p(()=>a[26]||(a[26]=[v("Outras formas de pagamento")])),_:1})]),_:1}),o("div",ba,[(g(!0),b(D,null,w(i.condicaoPagamento,s=>(g(),b("div",{class:"q-col-gutter-x-sm items-center q-mt-sm row",key:s.id},[o("div",va,l(s.descricao),1),o("div",xa,[[5,99].includes(s.tipo)?(g(),b("div",Ca,l(t.$filters.numero(s.valor,2)),1)):(g(),V(d,{key:0,modelValue:s.valor,"onUpdate:modelValue":h=>s.valor=h,tipo:"decimal",decimals:"2",class:"bg-grey-2"},null,8,["modelValue","onUpdate:modelValue"]))])]))),128))])])])])]),_:1})])])]),_:1})]),_:1})]),_:1},8,["modelValue"])}var ya=k(Q,[["render",Fa]]);export{ya as C};
